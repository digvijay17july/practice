   Given a list of jobs where each job has a start and finish time, and also has profit associated with it, 
   find maximum profit subset of non-overlapping jobs.
   
   For example, consider below jobs with their starting time, finishing time, and associated profit.
   Job 1: (1, 7, 60)
   Job 2: (2, 5, 30)
   Job 3: (4, 6, 10)
   Job 4: (6, 8, 30)
   Job 5: (6, 10, 50)
   Job 6: (8, 9, 10)
   
   o/p- 80 (6-10,2-5)
----------------------------------------------------------------------------------------------------

void getMaxProfit(arr<Job>,size){
int maxSum=0;
for(i=0;i<size;i++){
	int sum=0;
 	for(j=i+1;j<n;j++){
		if(!(arr[j].startTime<=arr[i].endTime || arr[j].endTime>= arr.startTime){
 			sum+=arr[j].profit+arr[i].profit
		} 
 		}
	if(sum>maxSum){
 	maxsum=sum;
 	}
}

}



1-7 60
8-9 10
--70

2-5 30
6-8 30

--60

4-6 10
8-9-10
-- 20

6-8 30
2-5 30
-- 60


6-10 50
2-5 30
-- 80

maxSum=0;

arrayOfSum={70,60,20,60,80}

<job {

//jobNumber;
startTime;
endTime;
profit;

}>





